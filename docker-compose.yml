version: '3'
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: shooteradmin
      POSTGRES_PASSWORD: ff
      POSTGRES_DB: ShooterDB
    volumes:
      - mydb-shootervolume:/var/lib/postgresql/data
      - ./postgres/dump:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - postgres-network

  redis:
    image: redis/redis-stack:latest
    #command: ["redis-cli", "SET ALL_DGS '{\"dgs_cluster\": \"ALL_DGS\",\"dgs\": [] }'"]
    volumes:
      - ./redis:/redis
    ports:
      - "6379:6379"
    networks:
      - redis-network

  db-initializer:
    build: 
      context: rust-api
      dockerfile: Dockerfile-register
    depends_on:
      - postgres
      - redis
    networks:
      - postgres-network
      - redis-network
    env_file:
      - ./rust-api/.env
    
  webapp:
    build: 
      context: rust-api
      dockerfile: Dockerfile-api
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - db-initializer
    networks:
      - postgres-network
      - redis-network
    env_file:
      - ./rust-api/.env

  # shooter-serv1:
  #   build:
  #     context: shooter-server
  #     args:
  #       USERNAME: server1
  #       EMAIL: server1
  #       PASSWORD: a
  #   ports:
  #     - "7777:7777"
  #   depends_on:
  #     - webapp

  #   networks:
  #       - server-network
  # shooter-serv2:
  #   build:
  #     context: shooter-server
  #     args:
  #       USERNAME: server2
  #       EMAIL: server2
  #       PASSWORD: a
  #   ports:
  #     - "7778:7777"
  #   depends_on:
  #     - webapp

  #   networks:
  #       - server-network

volumes:
  mydb-shootervolume:
  redis-volume:

networks:
  redis-network:
  postgres-network:
  server-network: